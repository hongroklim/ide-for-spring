<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dev.rokong.CategoryMapper">
    <select id="selectCategoryList" resultType="CategoryDTO">
        WITH RECURSIVE rc_category
             (id, name, up_id, ord, depth, path, sort, cycle)
          AS (SELECT A.id, A.name, A.up_id, A.ord,
                     1				    AS depth,
                     ARRAY[id::text]    AS path,
                     ARRAY[ord::text]	AS sort,
                     false			    AS cycle
                FROM category A
               WHERE up_id = 0
               UNION ALL
              SELECT A.id, A.name, A.up_id, A.ord,
                     B.depth+1 							AS depth,
                     ARRAY_APPEND(B.path, A.id::text)	AS path,
                     ARRAY_APPEND(B.sort, A.ord::text)	AS sort,
                     A.id::text = ANY(B.path)			AS cycle
                FROM category A,
                     rc_category B
               WHERE A.up_id = B.id
                 AND NOT CYCLE)
      SELECT id, name, up_id, ord, depth, path, sort
        FROM rc_category
       ORDER BY sort
    </select>

    <insert id="insertCategory" parameterType="CategoryDTO">
        <selectKey keyProperty="id" resultType="int" order="BEFORE">
            SELECT nextval('category_id_seq'::regclass)
        </selectKey>
        INSERT INTO category
               (id, name, up_id, ord)
        VALUES (#{id}, #{name}, #{upId}, #{ord})
    </insert>

    <delete id="deleteCategory" parameterType="int">
        DELETE
          FROM category
         WHERE id = #{id}
    </delete>

    <select id="selectCategory" parameterType="int" resultType="CategoryDTO">
        SELECT id, name, up_id, ord
          FROM category
         WHERE id = #{id}
    </select>

    <select id="selectCategoryChildren" parameterType="int" resultType="CategoryDTO">
        SELECT id, name, up_id, ord
          FROM category
         WHERE up_id = #{upId}
         ORDER BY ord
    </select>

    <update id="updateCategory" parameterType="CategoryDTO">
        UPDATE category
           SET name = #{name},
               up_id = #{upId}
         WHERE id = #{id}
    </update>

    <update id="updateCategoryOrder" parameterType="CategoryDTO">
        UPDATE category
           SET ord = #{ord}
         WHERE id = #{id}
    </update>

    <update id="pushChildrenOrder" parameterType="hashmap">
        UPDATE category
           SET ord = ord+1
         WHERE up_id = #{upId}
           AND ord >= #{startOrder}
    </update>

    <update id="arrangeChildrenOrder" parameterType="int">
        UPDATE category U
           SET ord = F.new_ord
          FROM (SELECT id,
                       ROW_NUMBER() OVER(PARTITION BY up_id
                                             ORDER BY ord ASC) AS new_ord
                  FROM category) F
         WHERE U.id = F.id
           AND U.up_id = #{upId}
    </update>

    <select id="isParentAndChild" parameterType="hashmap" resultType="boolean">
        WITH RECURSIVE rc_category
             (id, up_id, path, cycle)
          AS (SELECT A.id, A.up_id,
                     ARRAY[id::text]    AS path,
                     false			    AS cycle
                FROM category A
               WHERE id = #{childId}
               UNION ALL
              SELECT A.id, A.up_id,
                     ARRAY_APPEND(B.path, A.id::text)	AS path,
                     A.id::text = ANY(B.path)			AS cycle
                FROM category A,
                     rc_category B
               WHERE A.id = B.up_id
                 AND NOT CYCLE)
      SELECT true
	    FROM rc_category
	   WHERE id = #{parentId}
	     AND id != #{childId}
    </select>
</mapper>