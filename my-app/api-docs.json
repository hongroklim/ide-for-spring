{
  "swagger": "2.0",
  "info": {
    "description": "Shopping Service API Specialized in coffee",
    "version": "1.0",
    "title": "bean cafe API",
    "termsOfService": "about:blank",
    "contact": {
      "name": "Hongrok Lim",
      "url": "https://github.com/rokong/",
      "email": "hongrr123@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "host": "localhost:8080",
  "basePath": "/bean-cafe",
  "tags": [
    {
      "name": "Cart",
      "description": "Cart Controller"
    },
    {
      "name": "Category",
      "description": "Category Controller"
    },
    {
      "name": "Delivery",
      "description": "Delivery Controller"
    },
    {
      "name": "Order",
      "description": "Order Controller"
    },
    {
      "name": "Order Product",
      "description": "Order Product Controller"
    },
    {
      "name": "Pay API",
      "description": "Pay Api Controller"
    },
    {
      "name": "Product",
      "description": "Product Controller"
    },
    {
      "name": "Product Detail",
      "description": "Product Detail Controller"
    },
    {
      "name": "Product Option",
      "description": "Product Option Controller"
    },
    {
      "name": "Review",
      "description": "Review Controller"
    },
    {
      "name": "Test Status",
      "description": "Main Controller"
    },
    {
      "name": "User",
      "description": "User Controller"
    }
  ],
  "paths": {
    "/cart": {
      "get": {
        "tags": [
          "Cart"
        ],
        "summary": "get carts",
        "description": "get user's cart list [userNm]",
        "operationId": "getCartsUsingGET",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "cnt",
            "in": "query",
            "description": "product's amount to purchase",
            "required": false,
            "type": "integer",
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "x-example": 2
          },
          {
            "name": "optionCd",
            "in": "query",
            "description": "option cd (empty when only product)",
            "required": false,
            "type": "string",
            "x-example": "0201"
          },
          {
            "name": "productId",
            "in": "query",
            "description": "product id",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-example": 3
          },
          {
            "name": "updateDt",
            "in": "query",
            "description": "the last update time",
            "required": false,
            "type": "string",
            "x-example": "2020-10-18"
          },
          {
            "name": "userNm",
            "in": "query",
            "description": "user name",
            "required": false,
            "type": "string",
            "x-example": "customer1"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Cart"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "create cart",
        "description": "add product in user's cart [userNm, productId, optionCd, cnt]",
        "operationId": "addCartUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "cart",
            "description": "cart",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Cart"
        ],
        "summary": "update count",
        "description": "update product's count [userNm, productId, optionCd, cnt]",
        "operationId": "updateCartCntUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "cart",
            "description": "cart",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Cart"
        ],
        "summary": "delete cart",
        "description": "product id or option cd can be used [userNm, productId, optionCd]",
        "operationId": "deleteCartsUsingDELETE",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "cnt",
            "in": "query",
            "description": "product's amount to purchase",
            "required": false,
            "type": "integer",
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "x-example": 2
          },
          {
            "name": "optionCd",
            "in": "query",
            "description": "option cd (empty when only product)",
            "required": false,
            "type": "string",
            "x-example": "0201"
          },
          {
            "name": "productId",
            "in": "query",
            "description": "product id",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-example": 3
          },
          {
            "name": "updateDt",
            "in": "query",
            "description": "the last update time",
            "required": false,
            "type": "string",
            "x-example": "2020-10-18"
          },
          {
            "name": "userNm",
            "in": "query",
            "description": "user name",
            "required": false,
            "type": "string",
            "x-example": "customer1"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/category": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "get category list",
        "description": "get all categories",
        "operationId": "getCategoryListUsingGET",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Category"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Category"
        ],
        "summary": "create category",
        "description": "create category. if ord==0, append last [name, upId, ord]",
        "operationId": "createCategoryUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "category",
            "description": "category",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/category/{id}": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "get category",
        "description": "get category by its id",
        "operationId": "getCategoryUsingGET",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Category"
        ],
        "summary": "delete category",
        "description": "delete category which has no children",
        "operationId": "deleteCategoryUsingDELETE",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/category/{id}/order": {
      "put": {
        "tags": [
          "Category"
        ],
        "summary": "update category's order",
        "description": "change category's order in siblings [id, ord]",
        "operationId": "updateCategoryOrderUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "category",
            "description": "category",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/category/{id}/parent": {
      "put": {
        "tags": [
          "Category"
        ],
        "summary": "update category's parent",
        "description": "change category's parent [id, upId]",
        "operationId": "updateCategoryUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "category",
            "description": "category",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/category/{id}/sub": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "get category's children",
        "description": "get categories which are its children",
        "operationId": "getCategoryChildrenUsingGET",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Category"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/delivery/{orderId}": {
      "get": {
        "tags": [
          "Delivery"
        ],
        "summary": "get delivery",
        "description": "get delivery by order id [orderId]",
        "operationId": "getDeliveryUsingGET",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Delivery"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Delivery"
        ],
        "summary": "create delivery",
        "description": "create delivery in specified order id [*]",
        "operationId": "createDeliveryUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "delivery",
            "description": "delivery",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Delivery"
            }
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Delivery"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Delivery"
        ],
        "summary": "update delivery",
        "description": "update delivery [orderId]",
        "operationId": "updateDeliveryUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "delivery",
            "description": "delivery",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Delivery"
            }
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Delivery"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Delivery"
        ],
        "summary": "delete delivery",
        "description": "delete delivery [orderId]",
        "operationId": "deleteDeliveryUsingDELETE",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/order": {
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "create order",
        "description": "create basic order information",
        "operationId": "createOrderUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "order",
            "description": "order",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/order/{id}": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "get order",
        "description": "get order by order id [id]",
        "operationId": "getOrderUsingGET",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/order/{id}/pay": {
      "put": {
        "tags": [
          "Order"
        ],
        "summary": "update order pay",
        "description": "update order pay [id, payId]",
        "operationId": "updateOrderPayUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "order",
            "description": "order",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/order/{id}/status": {
      "put": {
        "tags": [
          "Order"
        ],
        "summary": "update order status",
        "description": "update order status [id, orderStatus]",
        "operationId": "updateOrderStatusUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "order",
            "description": "order",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/order/{orderId}/product": {
      "get": {
        "tags": [
          "Order Product"
        ],
        "summary": "get order products",
        "description": "get products by order id [orderId]",
        "operationId": "getOProductsUsingGET",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Order Product"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Order Product"
        ],
        "summary": "add order product",
        "description": "add product in order [orderId, productId, (optionCd), cnt, (payId)]",
        "operationId": "addOProductUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "oProduct",
            "description": "oProduct",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order Product"
            }
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Order Product"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/order/{orderId}/product/{productId}/{optionCd}": {
      "get": {
        "tags": [
          "Order Product"
        ],
        "summary": "get order product",
        "description": "get order product [orderId, productId, (optionCd)]",
        "operationId": "getOProductUsingGET",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "optionCd",
            "in": "path",
            "description": "optionCd",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "productId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Order Product"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Order Product"
        ],
        "summary": "update count",
        "description": "update order product's count [orderId, productId, (optionCd), cnt]",
        "operationId": "updateOProductUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "oProduct",
            "description": "oProduct",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order Product"
            }
          },
          {
            "name": "optionCd",
            "in": "path",
            "description": "optionCd",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "productId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Order Product"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Order Product"
        ],
        "summary": "delete order product",
        "description": "delete order product [orderId, productId, (optionCd)]",
        "operationId": "deleteOProductUsingDELETE",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "optionCd",
            "in": "path",
            "description": "optionCd",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "productId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/pay/api/{orderId}": {
      "post": {
        "tags": [
          "Pay API"
        ],
        "summary": "request payment",
        "description": "prepare payment by requesting API and get redirect URL [orderId]",
        "operationId": "requestPaymentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/pay/api/{orderId}/approve": {
      "get": {
        "tags": [
          "Pay API"
        ],
        "summary": "approve payment",
        "description": "approve payment of order by seller [orderId]",
        "operationId": "approvePaymentUsingGET",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pg_token",
            "in": "query",
            "description": "pg_token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Pay API"
        ],
        "summary": "approve payment",
        "description": "approve payment of order by seller [orderId]",
        "operationId": "approvePaymentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pg_token",
            "in": "query",
            "description": "pg_token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/pay/api/{orderId}/status": {
      "get": {
        "tags": [
          "Pay API"
        ],
        "summary": "get payment status",
        "description": "get payment status of order in API [orderId]",
        "operationId": "paymentStatusUsingGET",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Pay Status"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/product": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "get product list",
        "description": "get product list",
        "operationId": "getProductListUsingGET",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "create product",
        "description": "create product [name, price, (categoryId), (enabled),sellerNm, (stockCnt), (deliveryId), (deliveryPrice), (discountPrice)]",
        "operationId": "createProductUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "product",
            "description": "product",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/product/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "get product",
        "description": "get product by id",
        "operationId": "getProductUsingGET",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "update product",
        "description": "[(name), (price), (categoryId), (stockCnt), (enabled),(deliveryId), (discountPrice)]",
        "operationId": "updateProductUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "product",
            "description": "product",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "delete product",
        "description": "delete product",
        "operationId": "deleteProductUsingDELETE",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/product/{productId}/detail": {
      "get": {
        "tags": [
          "Product Detail"
        ],
        "summary": "get details in product",
        "description": "get detail list in product",
        "operationId": "getDetailListInProductUsingGET",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "productId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product Detail"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Product Detail"
        ],
        "summary": "create detail",
        "description": "create product detail [productId, optionCd, (priceChange), (stockCnt), (enabled)]",
        "operationId": "createDetailUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "pDetail",
            "description": "pDetail",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product Detail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Product Detail"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/product/{productId}/detail/{optionCd}": {
      "get": {
        "tags": [
          "Product Detail"
        ],
        "summary": "get detail",
        "description": "get detail",
        "operationId": "getDetailUsingGET",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "optionCd",
            "in": "path",
            "description": "optionCd",
            "required": true,
            "type": "string"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "productId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Product Detail"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Product Detail"
        ],
        "summary": "update detail",
        "description": "update product detail [(priceChange), (stockCnt), (enabled)]",
        "operationId": "updateDetailUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "optionCd",
            "in": "path",
            "description": "optionCd",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "pDetail",
            "description": "pDetail",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product Detail"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "description": "productId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Product Detail"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Product Detail"
        ],
        "summary": "delete detail",
        "description": "delete product detail",
        "operationId": "deleteDetailUsingDELETE",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "optionCd",
            "in": "path",
            "description": "optionCd",
            "required": true,
            "type": "string"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "productId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/product/{productId}/detail/{optionCd}/sub": {
      "get": {
        "tags": [
          "Product Detail"
        ],
        "summary": "get details in option",
        "description": "get detail list under option including itself",
        "operationId": "getDetailListInGroupUsingGET",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "optionCd",
            "in": "path",
            "description": "optionCd",
            "required": true,
            "type": "string"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "productId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product Detail"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/product/{productId}/option": {
      "get": {
        "tags": [
          "Product Option"
        ],
        "summary": "get options in product",
        "description": "get product options in product",
        "operationId": "getPOptionsInProductUsingGET",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "productId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product Option"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/product/{productId}/option/group": {
      "post": {
        "tags": [
          "Product Option"
        ],
        "summary": "create option group",
        "description": "create product option group [name]",
        "operationId": "createProductOptionGroupUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "pOption",
            "description": "pOption",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product Option"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "description": "productId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Product Option"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Product Option"
        ],
        "summary": "delete option group",
        "description": "delete last product option group",
        "operationId": "deleteProductOptionGroupUsingDELETE",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "productId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/product/{productId}/option/{groupId}": {
      "get": {
        "tags": [
          "Product Option"
        ],
        "summary": "get options in group",
        "description": "get product options in product and group",
        "operationId": "getPOptionsInGroupUsingGET",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "groupId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "productId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product Option"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Product Option"
        ],
        "summary": "create option",
        "description": "create product option []",
        "operationId": "createProductOptionUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "groupId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "pOption",
            "description": "pOption",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product Option"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "description": "productId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Product Option"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Product Option"
        ],
        "summary": "update option group's order",
        "description": "update product option group's order [ord]",
        "operationId": "updateProductOptionGroupOrderUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "groupId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "pOption",
            "description": "pOption",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product Option"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "description": "productId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Product Option"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/product/{productId}/option/{groupId}/{optionId}": {
      "get": {
        "tags": [
          "Product Option"
        ],
        "summary": "get option",
        "description": "get product option",
        "operationId": "getPOptionUsingGET",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "groupId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "optionId",
            "in": "path",
            "description": "optionId",
            "required": true,
            "type": "string"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "productId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Product Option"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Product Option"
        ],
        "summary": "update option",
        "description": "update option [(name), (ord)]",
        "operationId": "updateProductOptionUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "groupId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "optionId",
            "in": "path",
            "description": "optionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "pOption",
            "description": "pOption",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product Option"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "description": "productId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Product Option"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Product Option"
        ],
        "summary": "delete option",
        "description": "delete product option",
        "operationId": "deleteProductOptionUsingDELETE",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "groupId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "optionId",
            "in": "path",
            "description": "optionId",
            "required": true,
            "type": "string"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "productId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/review": {
      "get": {
        "tags": [
          "Review"
        ],
        "summary": "get reviews",
        "description": "[get reviews (productId), (optionCd), (userNm)]",
        "operationId": "getReviewsUsingGET",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "review",
            "description": "review",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Review"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Review"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/review/": {
      "post": {
        "tags": [
          "Review"
        ],
        "summary": "create review",
        "description": "[userNm, orderId, productId, optionCd, rate, content, (isVisible)]",
        "operationId": "createReviewUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "review",
            "description": "review",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Review"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Review"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/review/{id}": {
      "get": {
        "tags": [
          "Review"
        ],
        "summary": "get review",
        "description": "get review",
        "operationId": "getReviewUsingGET",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Review"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Review"
        ],
        "summary": "delete review",
        "operationId": "removeReviewUsingDELETE",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "Review"
        ],
        "summary": "update review",
        "description": "[(rate), (content), (isVisible)]",
        "operationId": "updateReviewUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "review",
            "description": "review",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Review"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Review"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/test/database": {
      "get": {
        "tags": [
          "Test Status"
        ],
        "summary": "database test page",
        "operationId": "helloSpringUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/test/server": {
      "get": {
        "tags": [
          "Test Status"
        ],
        "summary": "server status test page",
        "operationId": "serverStatusUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "get user list",
        "operationId": "getUsersUsingGET",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "create user",
        "operationId": "createUserUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/user/{userNm}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "get user",
        "operationId": "getUserUsingGET",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "userNm",
            "in": "path",
            "description": "userNm",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "deleteUser",
        "operationId": "deleteUserUsingDELETE",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "userNm",
            "in": "path",
            "description": "userNm",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/user/{userNm}/authority": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "add user authority",
        "operationId": "addUserAuthorityUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "delete user authority",
        "operationId": "deleteUserAuthorityUsingDELETE",
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/user/{userNm}/enabled": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "update user enabled",
        "operationId": "updateUserEnabledUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/user/{userNm}/pwd": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "update user password",
        "operationId": "updateUserPasswordUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "Cart": {
      "type": "object",
      "properties": {
        "userNm": {
          "type": "string",
          "example": "customer1",
          "description": "user name"
        },
        "productId": {
          "type": "integer",
          "format": "int32",
          "example": 3,
          "description": "product id"
        },
        "optionCd": {
          "type": "string",
          "example": "0201",
          "description": "option cd (empty when only product)"
        },
        "cnt": {
          "type": "integer",
          "format": "int32",
          "example": 2,
          "description": "product's amount to purchase",
          "minimum": 1,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        },
        "updateDt": {
          "type": "string",
          "example": "2020-10-18",
          "description": "the last update time"
        }
      },
      "title": "Cart",
      "description": "Where users put products to purchase"
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 3,
          "description": "category id"
        },
        "name": {
          "type": "string",
          "example": "africa",
          "description": "category name"
        },
        "upId": {
          "type": "integer",
          "format": "int32",
          "example": 7,
          "description": "parent's id"
        },
        "ord": {
          "type": "integer",
          "format": "int32",
          "example": 2,
          "description": "display order in siblings",
          "minimum": 1,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        }
      },
      "title": "Category",
      "description": "products are classified in this category"
    },
    "Delivery": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "order id"
        },
        "userNm": {
          "type": "string",
          "example": "customer1",
          "description": "user name"
        },
        "senderNm": {
          "type": "string",
          "example": "발송자",
          "description": "sender name"
        },
        "recipientNm": {
          "type": "string",
          "example": "수신자",
          "description": "recipient name"
        },
        "zipCd": {
          "type": "integer",
          "format": "int32",
          "example": 32800,
          "description": "zipCode"
        },
        "address1": {
          "type": "string",
          "example": "충청남도 계룡시 계룡대로 663",
          "description": "main address"
        },
        "address2": {
          "type": "string",
          "example": "사서함 501-329",
          "description": "sub address"
        },
        "contact1": {
          "type": "string",
          "example": "010-0000-1111",
          "description": "primary contact"
        },
        "contact2": {
          "type": "string",
          "example": "042-552-3668",
          "description": "secondary contact"
        },
        "message": {
          "type": "string",
          "example": "부재시 문앞에",
          "description": "message for delivery"
        }
      },
      "title": "Delivery",
      "description": "destination of order"
    },
    "Order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "order id"
        },
        "userNm": {
          "type": "string",
          "example": "customer1",
          "description": "customer name"
        },
        "price": {
          "type": "integer",
          "format": "int32",
          "example": 13700,
          "description": "products' price"
        },
        "deliveryPrice": {
          "type": "integer",
          "format": "int32",
          "example": 5500,
          "description": "delivery price"
        },
        "payId": {
          "type": "integer",
          "format": "int32",
          "example": 7,
          "description": "pay id"
        },
        "payNm": {
          "type": "string",
          "description": "pay name"
        },
        "requestDt": {
          "type": "string",
          "example": "2020-10-18",
          "description": "order request date"
        },
        "lastEditDt": {
          "type": "string",
          "example": "2020-10-18",
          "description": "last changed date"
        },
        "orderStatus": {
          "type": "string",
          "example": "WRITING",
          "description": "order status",
          "enum": [
            "WRITING",
            "PAYMENT",
            "PAYMENT_STANDBY",
            "PAYMENT_PROGRESS",
            "CHECKING",
            "CHECK_COMPLETE",
            "PRODUCT_READY",
            "DELIVERING",
            "COMPLETE",
            "CANCEL",
            "CUSTOMER_CANCEL",
            "CANCELED_WRITE",
            "CANCELED_PAYMENT",
            "CANCELED_CHECK",
            "CANCELED_PRODUCT",
            "SELLER_CANCEL",
            "CANCEL_CHECK",
            "CANCEL_PRODUCT",
            "CANCEL_DELIVER"
          ]
        }
      },
      "title": "Order",
      "description": "Order including primary information"
    },
    "Order Product": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "order id"
        },
        "productId": {
          "type": "integer",
          "format": "int32",
          "example": 3,
          "description": "product id"
        },
        "optionCd": {
          "type": "string",
          "example": "0201",
          "description": "option code in Product Detail"
        },
        "sellerNm": {
          "type": "string",
          "example": "seller1",
          "description": "seller name"
        },
        "cnt": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "product count"
        },
        "price": {
          "type": "integer",
          "format": "int32",
          "example": 8500,
          "description": "product's price"
        },
        "discountPrice": {
          "type": "integer",
          "format": "int32",
          "example": -800,
          "description": "product's discount price"
        },
        "orderStatus": {
          "type": "string",
          "example": "WRITING",
          "description": "order status",
          "enum": [
            "WRITING",
            "PAYMENT",
            "PAYMENT_STANDBY",
            "PAYMENT_PROGRESS",
            "CHECKING",
            "CHECK_COMPLETE",
            "PRODUCT_READY",
            "DELIVERING",
            "COMPLETE",
            "CANCEL",
            "CUSTOMER_CANCEL",
            "CANCELED_WRITE",
            "CANCELED_PAYMENT",
            "CANCELED_CHECK",
            "CANCELED_PRODUCT",
            "SELLER_CANCEL",
            "CANCEL_CHECK",
            "CANCEL_PRODUCT",
            "CANCEL_DELIVER"
          ]
        },
        "deliveryId": {
          "type": "integer",
          "format": "int32",
          "example": 2,
          "description": "delivery id"
        },
        "productNm": {
          "type": "string",
          "example": "Africa Special Beans",
          "description": "product's full name"
        },
        "optionNm": {
          "type": "string",
          "example": "Volume : 250g / Package : for gift",
          "description": "option's full name"
        }
      },
      "title": "Order Product",
      "description": "products included in order"
    },
    "Pay Status": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "order id"
        },
        "payId": {
          "type": "integer",
          "format": "int32",
          "example": 7,
          "description": "pay id"
        },
        "apiName": {
          "type": "string",
          "example": "TOSS",
          "description": "api name"
        },
        "apiKey": {
          "type": "string",
          "example": "qwerdsf91123kjasdfs",
          "description": "api key"
        },
        "orderStatus": {
          "type": "string",
          "example": "WRITING",
          "description": "order status",
          "enum": [
            "WRITING",
            "PAYMENT",
            "PAYMENT_STANDBY",
            "PAYMENT_PROGRESS",
            "CHECKING",
            "CHECK_COMPLETE",
            "PRODUCT_READY",
            "DELIVERING",
            "COMPLETE",
            "CANCEL",
            "CUSTOMER_CANCEL",
            "CANCELED_WRITE",
            "CANCELED_PAYMENT",
            "CANCELED_CHECK",
            "CANCELED_PRODUCT",
            "SELLER_CANCEL",
            "CANCEL_CHECK",
            "CANCEL_PRODUCT",
            "CANCEL_DELIVER"
          ]
        },
        "price": {
          "type": "integer",
          "format": "int32",
          "example": 19200,
          "description": "total price"
        },
        "payMethod": {
          "type": "string",
          "example": "CARD",
          "description": "pay method"
        }
      },
      "title": "Pay Status",
      "description": "Payment Status"
    },
    "Product": {
      "type": "object",
      "properties": {
        "stockCntInt": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 2,
          "description": "product id"
        },
        "name": {
          "type": "string",
          "example": "Bean Cafe Main Blending",
          "description": "product name"
        },
        "price": {
          "type": "integer",
          "format": "int32",
          "example": 8000,
          "description": "product price"
        },
        "categoryId": {
          "type": "integer",
          "format": "int32",
          "example": 3,
          "description": "product's category"
        },
        "enabled": {
          "type": "boolean",
          "example": true,
          "description": "is enabled"
        },
        "sellerNm": {
          "type": "string",
          "example": "seller1",
          "description": "seller name"
        },
        "stockCnt": {
          "type": "integer",
          "format": "int32",
          "description": "stock amount (can be empty)"
        },
        "deliveryId": {
          "type": "integer",
          "format": "int32",
          "example": 2,
          "description": "delivery id"
        },
        "deliveryPrice": {
          "type": "integer",
          "format": "int32",
          "example": 3000,
          "description": "delivery price"
        },
        "discountPrice": {
          "type": "integer",
          "format": "int32",
          "example": -800,
          "description": "discount price"
        }
      },
      "title": "Product",
      "description": "Product including primary information"
    },
    "Product Detail": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "integer",
          "format": "int32",
          "example": 3,
          "description": "product id"
        },
        "optionCd": {
          "type": "string",
          "example": "0201",
          "description": "option code"
        },
        "fullNm": {
          "type": "string",
          "example": "Volume : 250g / Package : for gift",
          "description": "option's full name"
        },
        "priceChange": {
          "type": "integer",
          "format": "int32",
          "example": 500,
          "description": "change price from original"
        },
        "stockCnt": {
          "type": "integer",
          "format": "int32",
          "example": 3,
          "description": "stock amount"
        },
        "enabled": {
          "type": "boolean",
          "example": true,
          "description": "is enabled"
        }
      },
      "title": "Product Detail",
      "description": "detail options of product"
    },
    "Product Option": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "integer",
          "format": "int32",
          "example": 3,
          "description": "product id"
        },
        "optionGroup": {
          "type": "integer",
          "format": "int32",
          "example": 2,
          "description": "option group"
        },
        "optionId": {
          "type": "string",
          "example": "02",
          "description": "option id"
        },
        "name": {
          "type": "string",
          "example": "for gift",
          "description": "title or name"
        },
        "ord": {
          "type": "integer",
          "format": "int32",
          "example": 2,
          "description": "display order in siblings"
        }
      },
      "title": "Product Option",
      "description": "product's option"
    },
    "Review": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "review id"
        },
        "userNm": {
          "type": "string",
          "example": "customer1",
          "description": "writer name"
        },
        "orderId": {
          "type": "integer",
          "format": "int32",
          "example": 2,
          "description": "order id"
        },
        "productId": {
          "type": "integer",
          "format": "int32",
          "example": 3,
          "description": "product id"
        },
        "optionCd": {
          "type": "string",
          "example": "0101",
          "description": "option code"
        },
        "rate": {
          "type": "number",
          "format": "double",
          "example": 7.2,
          "description": "rate"
        },
        "content": {
          "type": "string",
          "example": "not bad.",
          "description": "content"
        },
        "isVisible": {
          "type": "boolean",
          "example": true,
          "description": "is visible"
        },
        "updateDt": {
          "type": "string",
          "example": "2020-12-31",
          "description": "update date"
        }
      },
      "title": "Review",
      "description": "Review from purchased products"
    },
    "User": {
      "type": "object",
      "properties": {
        "userNm": {
          "type": "string",
          "example": "customer1",
          "description": "user name"
        },
        "pwd": {
          "type": "string",
          "example": "customer1",
          "description": "password"
        },
        "enabled": {
          "type": "boolean",
          "example": true,
          "description": "is enabled"
        },
        "authority": {
          "type": "array",
          "description": "user authorities",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "User",
      "description": "users"
    }
  }
}